---
breadcrumb: <%= vars.product_name %> Documentation
title: Architecture and Installation Overview
owner: <%= vars.product_name %> Documentation
---

##<a id='who'></a>For <%= vars.product_name %> Architects and Operators

This guide shows you how to design a <%= vars.product_name  %> platform and install it on an IaaS. If you are doing this, you have one or both of the following roles:

* **Architects** design a <%= vars.product_name %> platform. They know the IaaS that they will deploy it to, and what other relevant resources they have. In their design, they consider needs for the platform's capacity, availability, security, geography, budget, and other factors. If they do not install <%= vars.product_name %> themselves, they provide the architectural specifications to whoever does.

* **Operators** run a <%= vars.product_name %> platform, keep it up-to-date, monitor its health and performance, and fix any problems. They may also install the platform, or perform "Day 2" configurations that expand its functionality and integrate it with external systems.

This guide helps people in both roles create a <%= vars.product_name %> platform that does what they want it to.  The contents of this guide follow the phases of a typical <%= vars.product_name %> planning and installation effort.

<p class='note'><strong>Note:</strong> Elastic Runtime has been renamed Pivotal Application Service.</p>

##<a id='overview'></a>Planning and Installation Overview

<%= vars.product_name %> is a suite of products that runs on multiple IaaSes. Planning and installing <%= vars.product_name %> means building layers from the bottom up, starting with the details of your IaaS and ending with "Day 2" configurations that you perform on a installed and running <%= vars.product_name %> deployment.

Here's the typical <%= vars.product_name %> planning and installation process:

1. **Plan Your <%= vars.product_name %> Architecture**
  - Review the Requirements for your IaaS ([AWS](../customizing/aws.html), [Azure](../customizing/azure.html), [GCP](../customizing/gcp.html), [OpenStack](../customizing/openstack.html), [vSphere](../customizing/vsphere.html)).
  - Under [Reference Architectures](../refarch/index.html), refer to the reference architecture for your IaaS.
  - Assess your platform needs, including capacity, availability, container support, host OS, resource isolation, and geographical distribution. Discuss with your Pivotal contact.

1. **Deploy BOSH and Pivotal Operations Manager**
  - [BOSH](http://bosh.io) is an open-source tool that lets you run software systems in the cloud.
      - BOSH and its IaaS-specific Cloud Provider Interfaces (CPIs) are what enable <%= vars.product_name %> to run on multiple IaaSes.
      - See [Deploying with BOSH](../customizing/index.html#bosh) for a brief description of the BOSH deployment process.
   - [Pivotal Operations Manager](../customizing/ops-man.html) is a GUI application deployed by BOSH that streamlines deploying subsequent software to the cloud via BOSH.
      - Ops Manager represents <%= vars.product_name %> products as _tiles_ with multiple configuration panes that let you input or select configuration values needed for the product.
      - Ops Manager generates BOSH manifests containing the user-supplied configuration values, and sends them to the Director.
      - After you install Ops Manager and BOSH, you use Ops Manager to deploy almost all <%= vars.product_name %> products.
  - Deploying Ops Manager deploys both BOSH and Ops Manager with a single procedure.
      - On AWS, you can deploy Ops Manager manually, or automatically with a CloudFormation template.
      - On Azure, you can deploy Ops Manager manually, or automatically with an Azure Resource Manager (ARM) template. On Azure Government Cloud and Azure Germany you can only deploy Ops Manager manually.

1. **Deploy BOSH Add-ons** (Optional)
  - BOSH add-ons include the [IPsec](https://docs.pivotal.io/addon-ipsec), [ClamAV](https://docs.pivotal.io/addon-antivirus/), and [File Integrity Monitoring](https://docs.pivotal.io/addon-fim), which enhance <%= vars.product_name %> platform security and security logging.
  - You deploy these add-ons via BOSH rather than installing them with Ops Manager tiles.

1. **Install Runtimes**
  - [PAS](../customizing/configure-pas.html) (Pivotal Application Service) lets developers develop and manage cloud-native apps and software services.
      - PAS is based on the Cloud Foundry Foundation's open-source Application Runtime (formerly Elastic Runtime) project.
  - [PKS](https://docs.pivotal.io/pks/index.html) (Pivotal Container Service) uses BOSH to run and manage Kubernetes container clusters.
      - PKS is based on the Cloud Foundry Foundation's open-source Container Runtime (formerly Kubo) project.
  - [<%= vars.product_name %> Isolation Segment](../customizing/installing-pcf-is.html) lets a single PAS deployment run apps from separate, isolated pools of computing, routing, and logging resources.
      - Operators replicate and configure an Isolation Segment tile for each new resource pool they want to create.
     - You must install PAS before you can install Isolation Segment.
  - [PAS for Windows 2012R2](https://docs-pas-windows.cfapps.io/pas-windows/index.html) enables PAS to manage Windows Server 2012 cells hosting .NET apps, and can also be replicated to create multiple isolated resource pools.
      - As with Isolation Segment, Operators replicate and configure a PAS for Windows 2012R2 tile for each new resource pool they want to create.
      - You must install PAS before you can install PAS for Windows 2012R2.
  - [Small Footprint PAS](../customizing/small-footprint.html) is an alternative to PAS that uses far fewer VMs than PAS but has limitations.

1. **Install Services**
  - Install software services for <%= vars.product_name %> developers to use in their apps.
      - Services include the databases, caches, and message brokers that stateless cloud apps rely on to save information.
      - Installing and managing software services on <%= vars.product_name %> is an ongoing process, and is covered in the [<%= vars.product_name %> Operator Guide](../opsguide/index.html).

1. **Day 2 Configurations**
  - Day 2 configurations set up internal operations and external integrations on a running <%= vars.product_name %> platform.
      - Examples include front-end configuration, user accounts, logging and monitoring, internal security, and container and stemcell images.

##<a id='contents'></a>Guide Contents

This guide has two parts. The first part explains the <%= vars.product_name %> planning and installation process, and the second describes the main tools that operators use when installing <%= vars.product_name %>.

### Planning and Installation

<%= vars.product_name %> is a suite of products that runs on multiple IaaSes. Planning and installing <%= vars.product_name %> means building layers from the bottom up, starting with the details of your IaaS and ending with "Day 2" configurations that you perform on a installed and running <%= vars.product_name %> deployment.

This guide follows this bottom-up progression:

* <a href="/platform/customizing/plan.html">Planning <%= vars.product_name %></a> - Design a <%= vars.product_name %> platform that runs on your IaaS and fits your needs.

* <a href="/platform/customizing/deploy-bosh-om.html">Deploying BOSH and Ops Manager</a> - Build the foundation of <%= vars.product_name %>.

* <a href="/platform/customizing/add-ons.html">Deploying BOSH Add-Ons</a> - Use BOSH to extend foundation-level <%= vars.product_name %> capabilities.

* <a href="/platform/customizing/ops-man.html">Using Ops Manager</a> Ops Manager provides a dashboard for installing and configuring <%= vars.product_name %> products and services.

* <a href="/platform/cf-cli/index.html">Using the Cloud Foundry Command Line Interface (cf CLI)</a> - The cf CLI runs <%= vars.product_name %> operations in the cloud from a shell on your local workstation.

* <a href="/platform/customizing/runtimes.html">Installing Runtimes</a> - Install the application and container runtime environments that <%= vars.product_name %> exists for.

* <a href="/platform/customizing/day2.html">Day 2 Configurations</a> - Set up internal operations and external integrations for <%= vars.product_name %>.

* <a href="/platform/customizing/troubleshooting-diagnostics.html">Troubleshooting and Diagnostics</a>

After installing <%= vars.product_name %>, Operators install the software services that <%= vars.product_name %> developers use in their apps. These <%= vars.product_name %> services include the databases, caches, and message brokers that stateless cloud apps rely on to save information.

Installing and managing software services on <%= vars.product_name %> is an ongoing process, and is covered in the [<%= vars.product_name %> Operator Guide](../opsguide/index.html).

##<a id='pcf-docs'></a>Related Documentation

The [<%= vars.product_name %> Operator Guide](../opsguide/index.html) explains how to maintain a running <%= vars.product_name %> platform, including monitoring, tuning, troubleshooting, and upgrading.

The [<%= vars.product_name %> Security Guide](../security/index.html) explains how <%= vars.product_name %> security sytems work and how to keep your <%= vars.product_name %> platform secure.

[Getting Started with <%= vars.product_name %>](../pas/intro.html) gives a high-level overview of how <%= vars.product_name %> works and explains how you can try a 
a simple deployment on your own local machine.

See [<%= vars.product_name %> Documentation](./pcf-docs.html) for all <%= vars.product_name %> documentation.
